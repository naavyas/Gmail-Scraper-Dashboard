{"ast":null,"code":"var _jsxFileName = \"/Users/naavyasethi/Desktop/dashboard v2/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nconsole.log(\"Dashboard rendering...\", {\n  authenticated,\n  chartData\n});\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, LineElement, PointElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, PointElement, ArcElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [selectedChart, setSelectedChart] = useState('emails');\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [authenticated, setAuthenticated] = useState(false);\n  const [authMessage, setAuthMessage] = useState('');\n\n  // Check authentication status on component mount\n  useEffect(() => {\n    checkAuthStatus();\n\n    // Check for auth success in URL params\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('auth') === 'success') {\n      setAuthMessage('Authentication successful! You can now view your email analytics.');\n      setAuthenticated(true);\n      // Clean up URL\n      window.history.replaceState({}, document.title, window.location.pathname);\n    }\n  }, []);\n\n  // Fetch chart data when selection changes\n  useEffect(() => {\n    if (authenticated) {\n      fetchChartData();\n    }\n  }, [selectedChart, authenticated]);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await axios.get('/api/auth/status');\n      setAuthenticated(response.data.authenticated);\n    } catch (error) {\n      console.error('Error checking auth status:', error);\n      setAuthenticated(false);\n    }\n  };\n  const fetchChartData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let endpoint = '';\n      switch (selectedChart) {\n        case 'emails':\n          endpoint = '/api/emails/summary';\n          break;\n        case 'companies':\n          endpoint = '/api/companies/weekly';\n          break;\n        case 'stages':\n          endpoint = '/api/companies/stages';\n          break;\n        default:\n          endpoint = '/api/emails/summary';\n      }\n      const response = await axios.get(endpoint);\n      setChartData(response.data);\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n      setError('Failed to fetch chart data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAuthentication = () => {\n    window.location.href = 'http://localhost:5000/auth';\n  };\n  const getChartConfig = () => {\n    if (!chartData || !chartData.data) return null;\n    const colors = ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF', '#4BC0C0', '#FF6384'];\n    switch (selectedChart) {\n      case 'emails':\n        return {\n          type: 'bar',\n          data: {\n            labels: chartData.data.map(item => item.name),\n            datasets: [{\n              label: 'Outbound Emails Sent',\n              data: chartData.data.map(item => item.emails),\n              backgroundColor: colors.slice(0, chartData.data.length),\n              borderColor: colors.slice(0, chartData.data.length),\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              title: {\n                display: true,\n                text: 'Total Outbound Emails Sent per Team Member'\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                ticks: {\n                  stepSize: 1\n                }\n              }\n            }\n          }\n        };\n      case 'companies':\n        return {\n          type: 'line',\n          data: {\n            labels: chartData.data.map(item => {\n              const date = new Date(item.week);\n              return date.toLocaleDateString('en-US', {\n                month: 'short',\n                day: 'numeric'\n              });\n            }),\n            datasets: [{\n              label: 'Companies Sourced',\n              data: chartData.data.map(item => item.companies),\n              borderColor: '#36A2EB',\n              backgroundColor: 'rgba(54, 162, 235, 0.1)',\n              fill: true,\n              tension: 0.4\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              title: {\n                display: true,\n                text: 'Companies Sourced per Week'\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                ticks: {\n                  stepSize: 1\n                }\n              }\n            }\n          }\n        };\n      case 'stages':\n        return {\n          type: 'doughnut',\n          data: {\n            labels: chartData.data.map(item => item.stage),\n            datasets: [{\n              label: 'Companies by Stage',\n              data: chartData.data.map(item => item.companies),\n              backgroundColor: colors.slice(0, chartData.data.length),\n              borderColor: '#fff',\n              borderWidth: 2\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'right'\n              },\n              title: {\n                display: true,\n                text: 'Number of Companies in Each Stage'\n              }\n            }\n          }\n        };\n      default:\n        return null;\n    }\n  };\n  const renderChart = () => {\n    const config = getChartConfig();\n    if (!config) return null;\n    switch (config.type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(Bar, {\n          data: config.data,\n          options: config.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(Line, {\n          data: config.data,\n          options: config.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 16\n        }, this);\n      case 'doughnut':\n        return /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: config.data,\n          options: config.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gmail Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Track email performance and company sourcing metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), authMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: authMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), !authenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Authentication Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please authenticate with Google to access your Gmail analytics.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-button\",\n        onClick: handleAuthentication,\n        children: \"\\uD83D\\uDD17 Authenticate with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"chart-select\",\n          children: \"Select Chart Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"chart-select\",\n          value: selectedChart,\n          onChange: e => setSelectedChart(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"emails\",\n            children: \"Total Outbound Emails per Team Member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"companies\",\n            children: \"Companies Sourced per Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"stages\",\n            children: \"Companies by Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this) : renderChart()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), chartData && !chartData.success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Note: Using mock data due to API limitations. Authenticate and ensure proper Gmail API access for real data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"A35GIlW3cB5PCLQBA15p7H7cE9A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["console","log","authenticated","chartData","React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","PointElement","ArcElement","Title","Tooltip","Legend","Bar","Line","Doughnut","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Dashboard","_s","selectedChart","setSelectedChart","setChartData","loading","setLoading","error","setError","setAuthenticated","authMessage","setAuthMessage","checkAuthStatus","urlParams","URLSearchParams","window","location","search","get","history","replaceState","document","title","pathname","fetchChartData","response","data","endpoint","handleAuthentication","href","getChartConfig","colors","type","labels","map","item","name","datasets","label","emails","backgroundColor","slice","length","borderColor","borderWidth","options","responsive","plugins","legend","position","display","text","scales","y","beginAtZero","ticks","stepSize","date","Date","week","toLocaleDateString","month","day","companies","fill","tension","stage","renderChart","config","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","htmlFor","id","value","onChange","e","target","success","_c","$RefreshReg$"],"sources":["/Users/naavyasethi/Desktop/dashboard v2/frontend/src/components/Dashboard.js"],"sourcesContent":["console.log(\"Dashboard rendering...\", { authenticated, chartData });\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Dashboard = () => {\n  const [selectedChart, setSelectedChart] = useState('emails');\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [authenticated, setAuthenticated] = useState(false);\n  const [authMessage, setAuthMessage] = useState('');\n\n  // Check authentication status on component mount\n  useEffect(() => {\n    checkAuthStatus();\n    \n    // Check for auth success in URL params\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('auth') === 'success') {\n      setAuthMessage('Authentication successful! You can now view your email analytics.');\n      setAuthenticated(true);\n      // Clean up URL\n      window.history.replaceState({}, document.title, window.location.pathname);\n    }\n  }, []);\n\n  // Fetch chart data when selection changes\n  useEffect(() => {\n    if (authenticated) {\n      fetchChartData();\n    }\n  }, [selectedChart, authenticated]);\n\n  const checkAuthStatus = async () => {\n    try {\n      const response = await axios.get('/api/auth/status');\n      setAuthenticated(response.data.authenticated);\n    } catch (error) {\n      console.error('Error checking auth status:', error);\n      setAuthenticated(false);\n    }\n  };\n\n  const fetchChartData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      let endpoint = '';\n      switch (selectedChart) {\n        case 'emails':\n          endpoint = '/api/emails/summary';\n          break;\n        case 'companies':\n          endpoint = '/api/companies/weekly';\n          break;\n        case 'stages':\n          endpoint = '/api/companies/stages';\n          break;\n        default:\n          endpoint = '/api/emails/summary';\n      }\n\n      const response = await axios.get(endpoint);\n      setChartData(response.data);\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n      setError('Failed to fetch chart data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAuthentication = () => {\n    window.location.href = 'http://localhost:5000/auth';\n  };\n\n  const getChartConfig = () => {\n    if (!chartData || !chartData.data) return null;\n\n    const colors = [\n      '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',\n      '#FF9F40', '#FF6384', '#C9CBCF', '#4BC0C0', '#FF6384'\n    ];\n\n    switch (selectedChart) {\n      case 'emails':\n        return {\n          type: 'bar',\n          data: {\n            labels: chartData.data.map(item => item.name),\n            datasets: [{\n              label: 'Outbound Emails Sent',\n              data: chartData.data.map(item => item.emails),\n              backgroundColor: colors.slice(0, chartData.data.length),\n              borderColor: colors.slice(0, chartData.data.length),\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top',\n              },\n              title: {\n                display: true,\n                text: 'Total Outbound Emails Sent per Team Member'\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                ticks: {\n                  stepSize: 1\n                }\n              }\n            }\n          }\n        };\n\n      case 'companies':\n        return {\n          type: 'line',\n          data: {\n            labels: chartData.data.map(item => {\n              const date = new Date(item.week);\n              return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n            }),\n            datasets: [{\n              label: 'Companies Sourced',\n              data: chartData.data.map(item => item.companies),\n              borderColor: '#36A2EB',\n              backgroundColor: 'rgba(54, 162, 235, 0.1)',\n              fill: true,\n              tension: 0.4\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top',\n              },\n              title: {\n                display: true,\n                text: 'Companies Sourced per Week'\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                ticks: {\n                  stepSize: 1\n                }\n              }\n            }\n          }\n        };\n\n      case 'stages':\n        return {\n          type: 'doughnut',\n          data: {\n            labels: chartData.data.map(item => item.stage),\n            datasets: [{\n              label: 'Companies by Stage',\n              data: chartData.data.map(item => item.companies),\n              backgroundColor: colors.slice(0, chartData.data.length),\n              borderColor: '#fff',\n              borderWidth: 2\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'right',\n              },\n              title: {\n                display: true,\n                text: 'Number of Companies in Each Stage'\n              }\n            }\n          }\n        };\n\n      default:\n        return null;\n    }\n  };\n\n  const renderChart = () => {\n    const config = getChartConfig();\n    if (!config) return null;\n\n    switch (config.type) {\n      case 'bar':\n        return <Bar data={config.data} options={config.options} />;\n      case 'line':\n        return <Line data={config.data} options={config.options} />;\n      case 'doughnut':\n        return <Doughnut data={config.data} options={config.options} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>Gmail Analytics Dashboard</h1>\n        <p>Track email performance and company sourcing metrics</p>\n      </div>\n\n      {authMessage && (\n        <div className=\"success-message\">\n          {authMessage}\n        </div>\n      )}\n\n      {!authenticated ? (\n        <div className=\"auth-section\">\n          <h2>Authentication Required</h2>\n          <p>Please authenticate with Google to access your Gmail analytics.</p>\n          <button className=\"auth-button\" onClick={handleAuthentication}>\n            🔗 Authenticate with Google\n          </button>\n        </div>\n      ) : (\n        <>\n          <div className=\"controls\">\n            <label htmlFor=\"chart-select\">Select Chart Type:</label>\n            <select\n              id=\"chart-select\"\n              value={selectedChart}\n              onChange={(e) => setSelectedChart(e.target.value)}\n            >\n              <option value=\"emails\">Total Outbound Emails per Team Member</option>\n              <option value=\"companies\">Companies Sourced per Week</option>\n              <option value=\"stages\">Companies by Stage</option>\n            </select>\n          </div>\n\n          {error && (\n            <div className=\"error\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"chart-container\">\n            {loading ? (\n              <div className=\"loading\">\n                <p>Loading chart data...</p>\n              </div>\n            ) : (\n              renderChart()\n            )}\n          </div>\n\n          {chartData && !chartData.success && (\n            <div className=\"error\">\n              Note: Using mock data due to API limitations. Authenticate and ensure proper Gmail API access for real data.\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}